<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="Column7.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="Column1.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="Column2.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="Column3.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="Column4.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="Column6.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="dataGridViewTextBoxColumn1.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="Column8.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="dataGridViewTextBoxColumn2.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="dataGridViewTextBoxColumn3.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="dataGridViewTextBoxColumn4.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox2.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        rkJggg==
</value>
  </data>
</root>